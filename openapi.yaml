openapi: 3.1.0
info: { title: AquaBuilder API, version: 0.1.0 }
servers: [{ url: /api }]
paths:
  /parts/{category}:
    get:
      parameters:
        - in: path
          name: category
          schema: { type: string, enum: [tanks, filters, heaters, lights, substrate, fish, invertebrates, plants, corals, equipment] }
        - in: query
          name: q
          schema: { type: string }
      responses:
        '200': { description: OK }
  /builds:
    post:
      requestBody: { required: true, content: { application/json: { schema: { $ref: '#/components/schemas/CreateBuild' } } } }
      responses: { '201': { description: Created } }
  /builds/{id}:
    get: { responses: { '200': { description: OK } } }
  /prices/{productType}/{productId}:
    get: { responses: { '200': { description: OK } } }
  /alerts:
    post: { responses: { '201': { description: Created } } }
  /amazon/popular:
    get:
      parameters:
        - in: query
          name: category
          required: true
          schema: { type: string, enum: [filters, heaters, lights, substrate, equipment] }
        - in: query
          name: limit
          required: false
          schema: { type: integer, minimum: 1, maximum: 10, default: 6 }
      responses:
        '200': { description: OK }
  /admin/amazon/fetch:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [productType, productId]
              properties:
                productType: { type: string }
                productId: { type: string }
                url: { type: string, format: uri }
                asin: { type: string, minLength: 10, maxLength: 10 }
      responses:
        '201': { description: Created }
        '502': { description: Upstream error with fallback row }
components:
  schemas:
    CreateBuild:
      type: object
      required: [name, buildType, components]
      properties:
        name: { type: string }
        buildType: { type: string }
        components: { type: object }
